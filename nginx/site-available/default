# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	#listen   80; ## listen for ipv4; this line is default and implied
	#listen   [::]:80 default_server ipv6only=on; ## listen for ipv6

	root /var/www/clientv2/prod/;
	index index.html index.htm;

	server_name srvnode;

	#chunked_transfer_encoding       off;
	access_log /var/log/nginx/access.log combined;
	gzip             on;
	#gzip_min_length  1000;
	gzip_http_version 1.1;
	gzip_vary on;
	gzip_comp_level 9;
	gzip_proxied any;
	gzip_types text/plain text/html text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml application/rdf+xml;
	#it was gzip_buffers 16 8k; 
	gzip_buffers 128 4k; #my pagesize is 4
#	gzip_disable "MSIE [1-6]\.(?!.*SV1)";	



	location / {
		expires 0;
		add_header Cache-Control no-cache,must-revalidate;
                add_header Pragma no-cache;
		add_header Expires 0;
		add_header X-UA-Compatible IE=Edge;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index.html;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}
	
	location /app/{
                add_header X-UA-Compatible IE=Edge;
                add_header Cache-Control no-cache,must-revalidate;
                add_header Pragma no-cache;
                add_header Expires 0;
		root  /var/www/clientv2;
	}

        location /dist/{
                expires 0;
                add_header X-UA-Compatible IE=Edge;
                add_header Cache-Control no-cache,must-revalidate;
                add_header Pragma no-cache;
                add_header Expires 0;
                root  /var/www/clientv2;
        }


	location /mbtiles/ {
		proxy_pass http://127.0.0.1:8001/;
	}

        location /node/wms_search/ {
                proxy_pass http://127.0.0.1:8001/node/wms_search/;
        }
	

        location /socket.io/ {
                proxy_pass http://127.0.0.1:8004/socket.io/;
	        proxy_http_version 1.1;
        	proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection "upgrade";
	        proxy_set_header Host $host;
        }

	location /register_device{
                proxy_pass http://127.0.0.1:8004;


	}
        location /login.json {
	        proxy_pass http://127.0.0.1:8002;
        }

        location /process.json {
                proxy_pass http://127.0.0.1:8005;
        }

	#operations list, used to bootstrap the client
        location /operation/ {
                proxy_pass http://127.0.0.1:8003;
        }
	# uplaod a file ( post request) ou get one 
        location /upload {
                proxy_pass http://127.0.0.1:8003;
        }

      	location /poly {
                proxy_pass http://127.0.0.1:8003;
        }

        location /dispo {
                proxy_pass http://127.0.0.1:8003;
        }

        location /photo {
                proxy_pass http://127.0.0.1:8003;
        }


	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~ /\.ht {
		deny all;
	}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
